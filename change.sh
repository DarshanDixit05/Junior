#!/bin/sh
# Goal: Create a README for the vscode extension of Junior
# Plan:
# 1. Create a README.md file in the integrations/vscode directory
# 2. Write an introduction, focusing on usage rather than hype
# 3. Detail the extension's key feature, the "Write Attention" command
# 4. Guide the user through the configuration options
# 5. Provide a link to the main Junior Project
# 6. Mention that the extension and its documentation were fully generated by ChatGPT

cat << EOF > ./integrations/vscode/README.md
# Junior VSCode Extension

Welcome to the Junior VSCode Extension, a tool created to streamline your interaction with the [Junior project](https://github.com/tisztamo/Junior). 

Just like the rest of the Junior project, this extension and its documentation were entirely generated by ChatGPT, an advanced AI model by OpenAI. 

## How to Use the Junior VSCode Extension

This extension aids you in preparing tasks for the AI model. Here's how you use it:

1. Write your requirements into the \`prompt.yaml\` file.
2. Open all the files that you believe the AI will need to solve the task.
3. Activate the "Write Attention" command.

By following these steps, the extension will update the attention section of your \`prompt.yaml\` file, tailoring it to the files you have currently opened in your VSCode workspace.

### Write Attention Command

The "Write Attention" command, activated through \`junior.writeAttention\`, overwrites the attention descriptor based on the files and folders you have opened in your workspace. This allows you to guide the AI's focus towards specific areas of your project.

### Configuration

You can personalize the behavior of the Write Attention command through the VSCode settings. In the \`junior\` section, you'll find an \`attentionExcludeList\`. This is an array of glob patterns that allows you to exclude certain files or directories from being included in the \`attention\` field when the "Write Attention" command is used.

Get started and enjoy co-creating with the Junior AI!
EOF
